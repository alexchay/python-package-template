# https://taskfile.dev
version: "3"

vars:
  CODE_DIRS: src/ tests/
  PYTHON: python3
  PYTHON_VERSION: 3.10
  SET_VENV: {% if cookiecutter.use_poetry %}poetry run{% endif %}

includes:
{%- if cookiecutter.use_poetry %}
  poetry:
    taskfile: ./taskfiles/poetry.yml
{% endif %}
{%- if cookiecutter.use_pytest %}
  pytest:
    taskfile: ./taskfiles/pytest.yml
{% endif %}
{%- if cookiecutter.use_pylint %}
  pylint:
    taskfile: ./taskfiles/pylint.yml
{% endif %}
{%- if cookiecutter.use_mkdocs %}
  docs:
    taskfile: ./taskfiles/mkdocs.yml
{% endif %}
{%- if cookiecutter.use_ruff %}
  ruff:
    taskfile: ./taskfiles/ruff.yml
{%- endif %}
{% if cookiecutter.use_flake8 %}
  flake8:
    taskfile: ./taskfiles/flake8.yml
{% endif %}
{%- if cookiecutter.use_mypy %}
  mypy:
    taskfile: ./taskfiles/mypy.yml
{% endif %}
{%- if cookiecutter.use_black %}
  black:
    taskfile: ./taskfiles/black.yml
{% endif %}
{%- if cookiecutter.use_tox %}
  tox:
    taskfile: ./taskfiles/tox.yml
{% endif %}
{%- if cookiecutter.use_pre_commit %}
  pre-commit:
    taskfile: ./taskfiles/pre-commit.yml
{% endif %}

tasks:
  bash_version:
    desc: Check bash version
    cmds:
      - bash --version

  default:
    cmds:
      - {% if cookiecutter.use_poetry %}task: poetry:env-info{% else %}pip --version{% endif %}
    silent: true

  install:
    desc: Install required dependencies
    cmds:
{%- if cookiecutter.use_poetry %}
      - poetry install --with dev {% if cookiecutter.use_pytest %}--with test{% endif %} {% if cookiecutter.use_mkdocs %}--with docs{% endif %}
{%- else %}
      - python -m venv .venv && source .venv/bin/activate
      - pip install --upgrade pip
      - pip install .[dev] {% if cookiecutter.use_pytest %}.[test]{% endif %} {% if cookiecutter.use_mkdocs %}.[docs]{% endif %}
      - pip install -e .
{%- endif %}

  clean:
    desc: Clean up the installed dependencies
    cmds:
      - rm -rf .venv

  reinstall:
    desc: Clean up and reinstall required dependencies
    cmds:
      - task: clean
      - task: install

  update:
    desc: Update dependencies
    cmds:
{%- if cookiecutter.use_poetry %}
      - poetry update
{%- else %}
      - pip install --upgrade -r requirements_dev.txt
{%- endif %}

  build:
    desc: Build wheels
    cmds:
      - {% if cookiecutter.use_poetry %} poetry build {% else %} pyproject-build {% endif %}

  run:
    desc: Run the main application
    cmds:
      - {% if cookiecutter.use_poetry %} poetry run {% endif %} {{ cookiecutter.project_name }}

{% if cookiecutter.use_poetry %}
  install-only-main:
    desc: Install required dependencies
    cmds:
      - poetry install --only main
      - task: export

  install-dev:
    desc: Install required dependencies
    cmds:
      - poetry install --with dev

  export:
    desc: Export dependencies
    cmds:
      - poetry export -f requirements.txt --output requirements.txt --without-hashes --only main


  {% if cookiecutter.use_pytest %}
  install-test:
    desc: Install required dependencies
    cmds:
      - poetry install --with test
  {%- endif %}
{%- endif %}

  static-analysis:
    desc: Run code formatter check, linting, static type analysis
    cmds:
{%- if cookiecutter.use_pylint %}
      - task: pylint:check
{%- endif %}
{%- if cookiecutter.use_ruff %}
      - task: ruff:check
{%- endif %}
{%- if cookiecutter.use_flake8 %}
      - task: flake8:check
{%- endif %}
{%- if cookiecutter.use_mypy %}
      - task: mypy:check
{%- endif %}
{%- if cookiecutter.use_black %}
      - task: black:check-dry
{%- endif %}

  test-suite:
    desc: Run all tests
    cmds:
      - task: static-analysis
{%- if cookiecutter.use_pytest %}
      - task: pytest:all-cov
{%- endif %}

  init-git:
    desc: Initialize git repository
    cmds:
      - git init
      - git add LICENSE
      - git commit -m "Initial commit"
      - git branch -M main

  init:
    desc: Initialize project
    cmds:
      - task: init-git
      - task: install
{%- if cookiecutter.use_pre_commit %}
      - task: pre-commit:install
{%- endif %}
      - task: build
      - task: test-suite
      - task: default

{% if cookiecutter.versioning == "semver" %}
  bump-semver-patch:
    desc: Bump Patch of SemVer
    cmds:
      - cz bump --increment PATCH

  bump-semver-minor:
    desc: Bump Minor of SemVer
    cmds:
      - cz bump --increment MINOR
{%- endif %}

{% if cookiecutter.versioning == "calver" %}
  bump-calver:
    desc: Bump Cal version
    cmds:
      - ./bump_calver_build.sh
{%- endif %}


