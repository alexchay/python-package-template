[tox]
isolated_build = True
envlist = py39, py310

[testenv]
{%- if cookiecutter.use_pytest %}
  {%- if cookiecutter.dependency_management == "poetry" %}
allowlist_externals = poetry
# install testing framework
# ... or install anything else you might need here
#deps = pytest
commands_pre =
    poetry install --no-root
# run the tests
# ... or run any other command line tool you need to run here
commands =
    poetry run pytest {posargs:tests} -vv -s -l --import-mode prepend --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml --cov-fail-under=80 --cov-branch
  {%- else %}
commands_pre =
    pip install -e .[test]
commands =
    pytest {posargs:tests} -vv -s -l --import-mode prepend --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml --cov-fail-under=80 --cov-branch
  {%- endif %}
{%- endif %}

[testenv:typecheck]
skip_install = true
{%- if cookiecutter.use_mypy %}
  {%- if cookiecutter.dependency_management == "poetry" %}
allowlist_externals = poetry
commands_pre =
commands =
    poetry run mypy --ignore-missing-imports {posargs:src tests}
  {%- else %}
deps =
    mypy
    mypy-extensions >= 1.0.0
    types-termcolor >= 1.1.6.2
    types-setuptools
commands_pre =
commands =
    mypy --ignore-missing-imports {posargs:src tests}
  {%- endif %}
{%- endif %}

[testenv:format]
skip_install = true
{%- if cookiecutter.use_black %}
  {%- if cookiecutter.dependency_management == "poetry" %}
allowlist_externals = poetry
commands_pre =
commands =
    poetry run black --check --diff {posargs:src tests}
  {%- else %}
deps =
    black
commands_pre =
commands =
    black --check --diff {posargs:src tests}
  {%- endif %}
{%- endif %}

[testenv:lint]
skip_install = true
{%- if cookiecutter.dependency_management == "poetry" %}
allowlist_externals = poetry
commands_pre =
commands =
  {%- if cookiecutter.use_pylint %}
    poetry run pylint {posargs:src tests}
  {%- endif %}
  {%- if cookiecutter.use_flake8 %}
    poetry run flake8 {posargs:src tests}
  {%- endif %}
  {%- if cookiecutter.use_ruff %}
    poetry run ruff check {posargs:src tests}
  {%- endif %}
#    poetry run bandit -r {posargs:src tests}
#    poetry run safety check --full-report
  {%- else %}
commands_pre =
deps =
  {%- if cookiecutter.use_pylint %}
    pylint
  {%- endif %}
  {%- if cookiecutter.use_flake8 %}
    flake8
    flake8-bugbear
    flake8-pyproject >= 1.2.3
  {%- endif %}
  {%- if cookiecutter.use_ruff %}
    ruff
  {%- endif %}
commands =
  {%- if cookiecutter.use_pylint %}
    pylint {posargs:src tests}
  {%- endif %}
  {%- if cookiecutter.use_flake8 %}
    flake8 {posargs:src tests}
  {%- endif %}
  {%- if cookiecutter.use_ruff %}
    ruff check {posargs:src tests}
  {%- endif %}
{%- endif %}